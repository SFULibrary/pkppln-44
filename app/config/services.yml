# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    container.autowiring.strict_mode: true

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    Nines\UserBundle\:
        resource: '../../src/Nines/UserBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/Nines/UserBundle/{Entity,Repository,Resources,Tests}'

    Nines\UserBundle\Menu\Builder:
        tags:
            - { name: knp_menu.menu_builder, method: userNavMenu, alias: user}

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\EventListener\SwordExceptionListener:
        arguments: ["%kernel.environment%"]
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
            - { name: kernel.event_listener, event: kernel.controller }

    AppBundle\EventListener\TermsOfUseListener:
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: preRemove }

    AppBundle\Menu\Builder:
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: main}

    AppBundle\Services\FilePaths:
        arguments:
            $root: '%pln.data_dir%'
            $projectDir: '%kernel.project_dir%'

    AppBundle\Services\Ping:
        arguments:
            $minOjsVersion: '%pln.min_ojs_version%'

    AppBundle\Services\Processing\Depositor:
        arguments:
            $heldVersions: '%pln.held_versions%'

    AppBundle\Services\Processing\Harvester:
        arguments:
            $maxHarvestAttempts: '%pln.max_harvest_attepmts%'

    AppBundle\Services\Processing\VirusScanner:
        arguments:
            $socketPath: '%pln.clamd_socket%'

    AppBundle\Services\SwordClient:
        arguments:
            $serviceUri: '%pln.service_uri%'
            $uuid: '%pln.uuid%'
            $saveXml: '%pln.save_deposit_xml%'

    AppBundle\Command\UpgradeCommand:
        arguments:
            $oldEm: '@doctrine.dbal.oldversion_connection'
